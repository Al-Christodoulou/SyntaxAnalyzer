/*
 * 	This program takes a list of Symbols
 *	and parses every symbol in consecutive order,
 *  to check if it's syntactically valid ( & thus
 *  it can be generated by the syntax
 *  rules below ).
 *
 * 											  { C++ PSEUDOCODE }
 *
 *	2) General data:
 *
 *			""" INSPECTION """
 *
 *				Examples: 	((a*b)-b)
 *							(((a*b)+(a-b)))
 *							(((a*b-b)
 *							(a+((b*a+b)(a)))
 *							(a+((b*a+b)a)))
 *							(a-b)*(a-b)
 *							((a-b)*(a+b))
 *
 * 	        """ Syntax rules """
 *
 *			G -> (M)
 *			M -> YZ
 *			Y -> a | b | G
 *			Z -> *M | -M | +M | e
 *
 *			where e = null String
 *
 *  3) Output:
 *
 *		Generation step
 *		Generated String
 *		Syntax tree
 *
 */

 //											 *** CODE STARTS HERE ***

 // Necessary imports
#include <iostream>
#include "Process.h"

// Program's main function.
int main()
{
	Process().Mbegin();
}